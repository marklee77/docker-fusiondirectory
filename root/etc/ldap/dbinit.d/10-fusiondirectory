#!/bin/bash
. /usr/local/share/my_init/functions.sh

: ${fusiondirectory_ldap_uri:=ldap://localhost}
: ${fusiondirectory_ldap_tls:=TRUE}

: ${fusiondirectory_timezone:=Europe/London}
: ${fusiondirectory_language:=en_US}

: ${fusiondirectory_admin_password:="$(pwgen -s1 32)"}

# set secure umask
umask 077

file=/etc/fusiondirectory/fusiondirectory.passwd
if [ -f "$file" ]; then
    fusiondirectory_admin_password="$(cat "$file")"
else
    echo -n "$fusiondirectory_admin_password" >"$file"
fi

# set group-access umask
umask 027

file=/etc/fusiondirectory/fusiondirectory.conf
cat >"$file" <<EOF
<?xml version="1.0"?>
<conf>
  <main default="default"
        logging="TRUE"
        displayErrors="FALSE"
        forceSSL="FALSE"
        templateCompileDirectory="/var/spool/fusiondirectory/"
        debugLevel="0"
    >
    <location name="default" ldapTLS="$fusiondirectory_ldap_tls">
        <referral URI="$fusiondirectory_ldap_uri/$slapd_basedn"
                  adminDn="cn=admin,$slapd_basedn"
                  adminPassword="$slapd_admin_password" />
    </location>
  </main>
</conf>
EOF
chgrp www-data "$file"

/usr/sbin/fusiondirectory-insert-schema -e /etc/ldap/schema/nis.schema -y
SCHEMAS_TO_LOAD=$(ls /etc/ldap/schema/fusiondirectory/*.schema)
while [ -n "$SCHEMAS_TO_LOAD" ]; do
    SCHEMAS_TO_TRY=$SCHEMAS_TO_LOAD
    SCHEMAS_TO_LOAD=""
    for SCHEMA in $SCHEMAS_TO_TRY; do
        /usr/sbin/fusiondirectory-insert-schema -i $SCHEMA || SCHEMAS_TO_LOAD="$SCHEMAS_TO_LOAD $SCHEMA"
    done
done

ldapadd -f /etc/ldap/schema/ppolicy.ldif

ldapadd <<EOF
dn: cn=module,cn=config
cn: module
objectClass: olcModuleList
olcModuleLoad: ppolicy.la

dn: olcOverlay=ppolicy,olcDatabase={1}mdb,cn=config
objectClass: olcOverlayConfig
objectClass: olcPPolicyConfig
olcOverlay: ppolicy
olcPPolicyDefault: cn=default,ou=ppolicies,$slapd_basedn
olcPPolicyHashCleartext: FALSE
olcPPolicyUseLockout: FALSE
olcPPolicyForwardUpdates: FALSE
EOF

ldapadd -D cn=admin,$slapd_basedn -y /etc/ldap/ldap.passwd <<EOF
dn: $slapd_basedn
dc: ldap
o: ldap
ou: ldap
description: ldap
objectClass: top
objectClass: dcObject
objectClass: organization
objectClass: gosaDepartment
objectclass: gosaAcl
gosaAclEntry: 0:subtree:$(echo -n "cn=admin,ou=aclroles,$slapd_basedn" | base64):$(echo -n "uid=admin,ou=people,$slapd_basedn" | base64)
gosaAclEntry: 1:base:$(echo -n "cn=editownpwd,ou=aclroles,$slapd_basedn" | base64):$(echo -n "*" | base64)

dn: ou=fusiondirectory,$slapd_basedn
objectClass: organizationalUnit
ou: fusiondirectory

dn: cn=config,ou=fusiondirectory,$slapd_basedn
cn: config
objectClass: fusionDirectoryConf
fdLanguage: $fusiondirectory_language
fdTheme: breezy
fdTimezone: $fusiondirectory_timezone
fdLdapSizeLimit: 200
fdModificationDetectionAttribute: entryCSN
fdLogging: TRUE
fdSchemaCheck: TRUE
fdEnableSnapshots: TRUE
fdSnapshotBase: ou=snapshots,$slapd_basedn
fdPasswordDefaultHash: ssha
fdForcePasswordDefaultHash: FALSE
fdHandleExpiredAccounts: FALSE
fdLoginAttribute: uid
fdForceSSL: FALSE
fdWarnSSL: TRUE
fdSessionLifeTime: 1800
fdHttpAuthActivated: FALSE
fdHttpHeaderAuthActivated: FALSE
fdHttpHeaderAuthHeaderName: AUTH_USER
fdSslKeyPath: /etc/ssl/private/fd.key
fdSslCertPath: /etc/ssl/certs/fd.cert
fdSslCaCertPath: /etc/ssl/certs/ca.cert
fdCasActivated: FALSE
fdCasServerCaCertPath: /etc/ssl/certs/ca.cert
fdCasHost: localhost
fdCasPort: 443
fdCasContext: /cas
fdAccountPrimaryAttribute: uid
fdCnPattern: %givenName% %sn%
fdStrictNamingRules: TRUE
fdUserRDN: ou=people
fdAclRoleRDN: ou=aclroles
fdRestrictRoleMembers: FALSE
fdSplitPostalAddress: FALSE
fdDisplayErrors: FALSE
fdLdapStats: FALSE
fdDebugLevel: 0
fdListSummary: TRUE
fdAclTabOnObjects: FALSE
fdDisplayHookOutput: FALSE

dn: ou=aclroles,$slapd_basedn
objectClass: organizationalUnit
ou: aclroles

dn: cn=admin,ou=aclroles,$slapd_basedn
objectClass: top
objectClass: gosaRole
cn: admin
description: Gives all rights on all objects
gosaAclTemplate: 0:all;cmdrw

dn: cn=manager,ou=aclroles,$slapd_basedn
cn: manager
description: Give all rights on users in the given branch
objectClass: top
objectClass: gosaRole
gosaAclTemplate: 0:user/user;cmdrw,user/posixAccount;cmdrw

dn: cn=editowninfos,ou=aclroles,$slapd_basedn
cn: editowninfos
description: Allow users to edit their own information (main tab and posix use
  only on base)
objectClass: top
objectClass: gosaRole
gosaAclTemplate: 0:user/user;srw,user/posixAccount;srw

dn: cn=editownpwd,ou=aclroles,$slapd_basedn
cn: editownpwd
description: Allow users to edit their own password (use only on base)
objectClass: top
objectClass: gosaRole
gosaAclTemplate: 0:user/user;s#userPassword;rw

dn: ou=people,$slapd_basedn
objectClass: organizationalUnit
ou: people

dn: uid=admin,ou=people,$slapd_basedn
cn: System Administrator
sn: Administrator
givenName: System
uid: admin
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
userPassword: $(slappasswd -s "$fusiondirectory_admin_password")

dn: ou=ppolicies,$slapd_basedn
objectClass: organizationalUnit
ou: ppolicies

dn: cn=default,ou=ppolicies,$slapd_basedn
objectClass: device
objectClass: pwdPolicy
objectClass: pwdPolicyChecker
pwdAttribute: userPassword
cn: default
pwdAllowUserChange: TRUE
pwdCheckQuality: 0
pwdLockout: TRUE
pwdSafeModify: FALSE
pwdMustChange: FALSE

dn: ou=alias,$slapd_basedn
objectClass: organizationalUnit
ou: alias

dn: ou=locks,ou=fusiondirectory,$slapd_basedn
objectClass: organizationalUnit
ou: locks
EOF
